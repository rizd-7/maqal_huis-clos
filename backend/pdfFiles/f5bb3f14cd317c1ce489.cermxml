<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.0 20120330//EN" "JATS-archivearticle1.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink">
  <front>
    <journal-meta />
    <article-meta>
      <title-group>
        <article-title>Generating Diverse Code Explanations using the GPT-3 Large Language Model</article-title>
      </title-group>
      <contrib-group>
        <contrib contrib-type="author">
          <string-name>Stephen MacNeil</string-name>
          <email>stephen.macneil@temple.edu</email>
          <xref ref-type="aff" rid="aff0">0</xref>
        </contrib>
        <contrib contrib-type="author">
          <string-name>Seth Bernstein</string-name>
          <email>seth.bernstein@temple.edu</email>
          <xref ref-type="aff" rid="aff0">0</xref>
        </contrib>
        <contrib contrib-type="author">
          <string-name>Andrew Tran</string-name>
          <email>andrew.tran10@temple.edu</email>
          <xref ref-type="aff" rid="aff0">0</xref>
        </contrib>
        <contrib contrib-type="author">
          <string-name>Erin Ross</string-name>
          <email>erinross@temple.edu</email>
          <xref ref-type="aff" rid="aff0">0</xref>
        </contrib>
        <contrib contrib-type="author">
          <string-name>Dan Mogil</string-name>
          <email>daniel.mogil@temple.edu</email>
          <xref ref-type="aff" rid="aff0">0</xref>
        </contrib>
        <contrib contrib-type="author">
          <string-name>Ziheng Huang</string-name>
          <email>z8huang@ucsd.edu</email>
          <xref ref-type="aff" rid="aff1">1</xref>
        </contrib>
        <aff id="aff0">
          <label>0</label>
          <institution>Temple University</institution>
          ,
          <addr-line>Philadelphia, PA</addr-line>
          ,
          <country country="US">USA</country>
        </aff>
        <aff id="aff1">
          <label>1</label>
          <institution>University of California-San Diego</institution>
          ,
          <addr-line>La Jolla, CA</addr-line>
          ,
          <country country="US">USA</country>
        </aff>
      </contrib-group>
      <pub-date>
        <year>2022</year>
      </pub-date>
      <fpage>7</fpage>
      <lpage>11</lpage>
    </article-meta>
  </front>
  <body>
    <fig>
      <graphic xlink:href="pdfFiles\f5bb3f14cd317c1ce489.images\img_1_1.png" />
    </fig>
    <fig>
      <graphic xlink:href="pdfFiles\f5bb3f14cd317c1ce489.images\img_1_2.png" />
    </fig>
    <fig>
      <graphic xlink:href="pdfFiles\f5bb3f14cd317c1ce489.images\img_2_1.png" />
    </fig>
    <sec id="sec-1">
      <title>USE CASES</title>
      <p>
        To understand the types of explanations GPT-3 [
        <xref ref-type="bibr" rid="ref2">2</xref>
        ] can generate,
we issued over 700 prompts across numerous code snippets. An
example prompt and resulting explanation is shown in Figure 1.
We discovered eight explanation types and Figure 2 includes three
explanation types to illustrate the explanatory power of GPT-3. The
additional types include: 1) tracing the execution of code, 2) fixing
bugs and explaining how they were fixed, 3) generating analogies
to real world settings, 4) listing relevant programming concepts,
and 5) predicting the console output.
2.1
      </p>
      <p>
        Analyzing and explaining time complexity
Instructors rate time complexity as the most dificult programming
topic [
        <xref ref-type="bibr" rid="ref17">17</xref>
        ]. However, understanding time complexity is important [
        <xref ref-type="bibr" rid="ref13 ref6">6,
13</xref>
        ] because it facilitates decision-making so students choose an
appropriate algorithm for a given problem. This use case shows
GPT-3 can identify and explain time complexity.
2.2
      </p>
      <p>
        Identifying common mistakes made by
beginner programmers
Commonality exists in how students solve programming
problems [
        <xref ref-type="bibr" rid="ref15">15</xref>
        ] and the mistakes they make [
        <xref ref-type="bibr" rid="ref1 ref11">1, 11</xref>
        ]. Pedagogical
techniques, such as the ‘muddiest point’ highlight these common and
most confusing concepts [
        <xref ref-type="bibr" rid="ref14 ref3">3, 14</xref>
        ]. GPT-3 can automatically create
a checklist of common mistakes students might make regarding a
given code snippet.
      </p>
      <p>
        Summarizing code at multiple levels of
abstraction
Before understanding how a code snippet executes, it is often useful
to understand the purpose of the code [
        <xref ref-type="bibr" rid="ref5">5</xref>
        ]. The summary
generated by GPT-3 and shown in Figure 2 defines the goal, traces the
execution, and highlights relevant CS concepts such as arrays.
3
      </p>
    </sec>
    <sec id="sec-2">
      <title>DISCUSSION</title>
      <p>Our three use cases demonstrate the potential for GPT-3 to explain
code for intro CS students. Our poster presentation will feature all
eight explanation types as a design space of explanations to convey
the diversity of explanations that can be generated by LLMs. We will
highlight best practices for generating efective explanations and
pitfalls that lead to less efective explanations. We are evaluating
the usefulness of these explanations in a series of summer classes.</p>
    </sec>
  </body>
  <back>
    <ref-list>
      <ref id="ref1">
        <mixed-citation>
          [1]
          <string-name>
            <given-names>Amjad</given-names>
            <surname>Altadmri</surname>
          </string-name>
          and
          <string-name>
            <surname>Neil CC Brown</surname>
          </string-name>
          .
          <year>2015</year>
          .
          <article-title>37 million compilations: Investigating novice programming mistakes in large-scale student data</article-title>
          .
          <source>In Proceedings of the 46th ACM Technical Symposium on Computer Science Education</source>
          .
          <volume>522</volume>
          -
          <fpage>527</fpage>
          .
        </mixed-citation>
      </ref>
      <ref id="ref2">
        <mixed-citation>
          [2]
          <string-name>
            <given-names>Tom</given-names>
            <surname>Brown</surname>
          </string-name>
          , Benjamin Mann, Nick Ryder, Melanie Subbiah,
          <string-name>
            <surname>Jared D Kaplan</surname>
            , Prafulla Dhariwal, Arvind Neelakantan, Pranav Shyam, Girish Sastry,
            <given-names>Amanda</given-names>
          </string-name>
          <string-name>
            <surname>Askell</surname>
          </string-name>
          , et al.
          <year>2020</year>
          .
          <article-title>Language models are few-shot learners</article-title>
          .
          <source>Advances in Neural Information Processing Systems</source>
          <volume>33</volume>
          (
          <year>2020</year>
          ),
          <fpage>1877</fpage>
          -
          <lpage>1901</lpage>
          .
        </mixed-citation>
      </ref>
      <ref id="ref3">
        <mixed-citation>
          [3]
          <string-name>
            <given-names>Adam</given-names>
            <surname>Carberry</surname>
          </string-name>
          , Stephen Krause, Casey Ankeny, and
          <string-name>
            <given-names>Cynthia</given-names>
            <surname>Waters</surname>
          </string-name>
          .
          <year>2013</year>
          . “
          <article-title>Unmuddying” course content using muddiest point reflections</article-title>
          .
          <source>In 2013 IEEE Frontiers in Education Conference (FIE)</source>
          . IEEE,
          <fpage>937</fpage>
          -
          <lpage>942</lpage>
          .
        </mixed-citation>
      </ref>
      <ref id="ref4">
        <mixed-citation>
          [4]
          <string-name>
            <given-names>Mark</given-names>
            <surname>Chen</surname>
          </string-name>
          , Jerry Tworek, Heewoo Jun, Qiming Yuan, Henrique Ponde de Oliveira Pinto, Jared Kaplan, Harri Edwards, Yuri Burda, Nicholas Joseph,
          <string-name>
            <given-names>Greg</given-names>
            <surname>Brockman</surname>
          </string-name>
          , et al.
          <year>2021</year>
          .
          <article-title>Evaluating large language models trained on code</article-title>
          .
          <source>arXiv preprint arXiv:2107.03374</source>
          (
          <year>2021</year>
          ).
        </mixed-citation>
      </ref>
      <ref id="ref5">
        <mixed-citation>
          [5]
          <string-name>
            <given-names>Kathryn</given-names>
            <surname>Cunningham</surname>
          </string-name>
          , Yike Qiao, Alex Feng, and
          <string-name>
            <surname>Eleanor O'Rourke</surname>
          </string-name>
          .
          <year>2022</year>
          .
          <article-title>Bringing "High-Level" Down to Earth: Gaining Clarity in Conversational Programmer Learning Goals</article-title>
          .
          <source>In Proceedings of the 53rd ACM Technical Symposium on Computer Science</source>
          Education V.
          <volume>1</volume>
          (Providence, RI, USA) (
          <year>SIGCSE 2022</year>
          ).
          <article-title>Association for Computing Machinery</article-title>
          , New York, NY, USA,
          <fpage>551</fpage>
          -
          <lpage>557</lpage>
          . https: //doi.org/10.1145/3478431.3499370
        </mixed-citation>
      </ref>
      <ref id="ref6">
        <mixed-citation>
          [6]
          <string-name>
            <surname>Elvina</surname>
            <given-names>Elvina</given-names>
          </string-name>
          and
          <string-name>
            <given-names>Oscar</given-names>
            <surname>Karnalim</surname>
          </string-name>
          .
          <year>2017</year>
          .
          <article-title>Complexitor: An educational tool for learning algorithm time complexity in practical manner</article-title>
          .
          <source>ComTech: Computer, Mathematics and Engineering Applications</source>
          <volume>8</volume>
          ,
          <issue>1</issue>
          (
          <year>2017</year>
          ),
          <fpage>21</fpage>
          -
          <lpage>27</lpage>
          .
        </mixed-citation>
      </ref>
      <ref id="ref7">
        <mixed-citation>
          [7]
          <string-name>
            <given-names>James</given-names>
            <surname>Finnie-Ansley</surname>
          </string-name>
          , Paul Denny, Brett A. Becker,
          <string-name>
            <given-names>Andrew</given-names>
            <surname>Luxton-Reilly</surname>
          </string-name>
          , and
          <string-name>
            <given-names>James</given-names>
            <surname>Prather</surname>
          </string-name>
          .
          <year>2022</year>
          .
          <article-title>The Robots Are Coming: Exploring the Implications of OpenAI Codex on Introductory Programming</article-title>
          .
          <source>In Australasian Computing Education Conference (Virtual Event, Australia) (ACE '22)</source>
          . ACM, New York, NY, USA,
          <fpage>10</fpage>
          -
          <lpage>19</lpage>
          . https://doi.org/10.1145/3511861.3511863
        </mixed-citation>
      </ref>
      <ref id="ref8">
        <mixed-citation>
          [8]
          <string-name>
            <surname>Philip</surname>
            <given-names>J</given-names>
          </string-name>
          <string-name>
            <surname>Guo</surname>
          </string-name>
          .
          <year>2013</year>
          .
          <article-title>Online python tutor: embeddable web-based program visualization for cs education</article-title>
          .
          <source>In Proceeding of the 44th ACM technical symposium on Computer science education. 579-584.</source>
        </mixed-citation>
      </ref>
      <ref id="ref9">
        <mixed-citation>
          [9]
          <string-name>
            <given-names>Andrew</given-names>
            <surname>Head</surname>
          </string-name>
          , Codanda Appachu,
          <article-title>Marti A Hearst,</article-title>
          and
          <string-name>
            <given-names>Björn</given-names>
            <surname>Hartmann</surname>
          </string-name>
          .
          <year>2015</year>
          .
          <article-title>Tutorons: Generating context-relevant, on-demand explanations and demonstrations of online code</article-title>
          .
          <source>In 2015 IEEE Symposium on Visual Languages and HumanCentric Computing</source>
          (
          <article-title>VL/HCC)</article-title>
          .
          <source>IEEE</source>
          ,
          <fpage>3</fpage>
          -
          <lpage>12</lpage>
          .
        </mixed-citation>
      </ref>
      <ref id="ref10">
        <mixed-citation>
          [10]
          <string-name>
            <surname>Samiha</surname>
            <given-names>Marwan</given-names>
          </string-name>
          ,
          <string-name>
            <given-names>Ge</given-names>
            <surname>Gao</surname>
          </string-name>
          , Susan Fisk, Thomas W. Price, and
          <string-name>
            <given-names>Tifany</given-names>
            <surname>Barnes</surname>
          </string-name>
          .
          <year>2020</year>
          .
          <article-title>Adaptive Immediate Feedback Can Improve Novice Programming Engagement and Intention to Persist in Computer Science</article-title>
          .
          <source>In Proceedings of the 2020 ACM Conference on International Computing Education Research (Virtual Event, New Zealand) (ICER '20)</source>
          .
          <article-title>Association for Computing Machinery</article-title>
          , New York, NY, USA,
          <fpage>194</fpage>
          -
          <lpage>203</lpage>
          . https://doi.org/10.1145/3372782.3406264
        </mixed-citation>
      </ref>
      <ref id="ref11">
        <mixed-citation>
          [11]
          <string-name>
            <surname>Davin</surname>
            <given-names>McCall</given-names>
          </string-name>
          and
          <string-name>
            <given-names>Michael</given-names>
            <surname>Kölling</surname>
          </string-name>
          .
          <year>2014</year>
          .
          <article-title>Meaningful categorisation of novice programmer errors</article-title>
          .
          <source>In 2014 IEEE Frontiers in Education Conference (FIE) Proceedings. IEEE, 1-8.</source>
        </mixed-citation>
      </ref>
      <ref id="ref12">
        <mixed-citation>
          [12]
          <string-name>
            <surname>Greg</surname>
            <given-names>L Nelson</given-names>
          </string-name>
          ,
          <string-name>
            <surname>Benjamin Xie</surname>
          </string-name>
          , and
          <string-name>
            <surname>Amy</surname>
          </string-name>
          J Ko.
          <year>2017</year>
          .
          <article-title>Comprehension first: evaluating a novel pedagogy and tutoring system for program tracing in CS1</article-title>
          .
          <source>In Proceedings of the 2017 ACM conference on international computing education research</source>
          . 2-
          <fpage>11</fpage>
          .
        </mixed-citation>
      </ref>
      <ref id="ref13">
        <mixed-citation>
          [13]
          <string-name>
            <given-names>Miranda</given-names>
            <surname>Parker</surname>
          </string-name>
          and
          <string-name>
            <given-names>Colleen</given-names>
            <surname>Lewis</surname>
          </string-name>
          .
          <year>2014</year>
          .
          <article-title>What makes big-O analysis dificult: understanding how students understand runtime analysis</article-title>
          .
          <source>Journal of Computing Sciences in Colleges 29</source>
          ,
          <issue>4</issue>
          (
          <year>2014</year>
          ),
          <fpage>164</fpage>
          -
          <lpage>174</lpage>
          .
        </mixed-citation>
      </ref>
      <ref id="ref14">
        <mixed-citation>
          [14]
          <string-name>
            <given-names>Daniel</given-names>
            <surname>Perez</surname>
          </string-name>
          , Leila Zahedi, Monique Ross, Jia Zhu, Tifany Vinci-Cannava,
          <string-name>
            <given-names>Laird</given-names>
            <surname>Kramer</surname>
          </string-name>
          , and
          <string-name>
            <given-names>Maria</given-names>
            <surname>Charters</surname>
          </string-name>
          .
          <year>2020</year>
          .
          <article-title>WIP: An exploration into the muddiest points and self-eficacy of students in introductory computer science courses</article-title>
          .
          <source>In 2020 IEEE Frontiers in Education Conference (FIE)</source>
          .
          <source>IEEE</source>
          , 1-
          <fpage>5</fpage>
          .
        </mixed-citation>
      </ref>
      <ref id="ref15">
        <mixed-citation>
          [15]
          <string-name>
            <surname>Chris</surname>
            <given-names>Piech</given-names>
          </string-name>
          , Mehran Sahami, Jonathan Huang, and
          <string-name>
            <given-names>Leonidas</given-names>
            <surname>Guibas</surname>
          </string-name>
          .
          <year>2015</year>
          .
          <article-title>Autonomously generating hints by inferring problem solving policies</article-title>
          .
          <source>In Proceedings of the second</source>
          (
          <year>2015</year>
          <article-title>) acm conference on learning@ scale</article-title>
          .
          <fpage>195</fpage>
          -
          <lpage>204</lpage>
          .
        </mixed-citation>
      </ref>
      <ref id="ref16">
        <mixed-citation>
          [16]
          <string-name>
            <surname>Thomas</surname>
            <given-names>W Price</given-names>
          </string-name>
          , Yihuan Dong, and
          <string-name>
            <given-names>Dragan</given-names>
            <surname>Lipovac</surname>
          </string-name>
          .
          <year>2017</year>
          .
          <article-title>iSnap: towards intelligent tutoring in novice programming environments</article-title>
          .
          <source>In Proceedings of the 2017 ACM SIGCSE Technical Symposium on computer science education</source>
          .
          <volume>483</volume>
          -
          <fpage>488</fpage>
          .
        </mixed-citation>
      </ref>
      <ref id="ref17">
        <mixed-citation>
          [17]
          <string-name>
            <given-names>Carsten</given-names>
            <surname>Schulte</surname>
          </string-name>
          and
          <string-name>
            <given-names>Jens</given-names>
            <surname>Bennedsen</surname>
          </string-name>
          .
          <year>2006</year>
          .
          <article-title>What do teachers teach in introductory programming?</article-title>
          .
          <source>In Proceedings of the second international workshop on Computing education research</source>
          .
          <volume>17</volume>
          -
          <fpage>28</fpage>
          .
        </mixed-citation>
      </ref>
    </ref-list>
  </back>
</article>